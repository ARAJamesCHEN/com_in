<?php
/**
 * Created by PhpStorm.
 * User: James
 * Date: 2018/6/10
 * Time: 18:25
 */

namespace app\controllers;
use app\controllers\formbeans\CreateNewPollFormBean;
use app\controllers\formbeans\CreateNewPollFormBeanFactory;
use app\models\modelutils\ModelUtil;
use app\models\PollModel;
use comphp\base\Controller;
use app\models\BoardModel;

include(APP_PATH . 'app/controllers/formbeans/'.'CreateNewPollFormBean.php');

define('NEWPOLL_ACTION_INIT', "init" );

define('NEWPOLL_ACTION_ADD', "add" );

class CreateNewPollController extends Controller
{


    private $formBean;

    private $boardModel;

    private $pollModel;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $this->formBean = CreateNewPollFormBeanFactory::create();

        $this->boardModel = new BoardModel();

        $this->pollModel = new PollModel();

        $this->initViewParasFunction();



        if ($this->_actionName == NEWPOLL_ACTION_ADD){

            $this->addNewPollFunction();

        }

        $this->assign('warning', $this->formBean->getWarning());

        $this->assign('boardsInfoArray', $this->formBean->getBoards() );
        $this->assign('titleWarning', $this->formBean->getTitleWarning() );
        $this->assign('optionWarning', $this->formBean->getOptionWarning() );
        $this->assign('contentWarning', $this->formBean->getContentWarning() );
        $this->assign('isMutiWarning', $this->formBean->getisMutiWarning());

        $this->render();

    }

    private function initViewParasFunction(){

        $boardInfos = $this->boardModel->searchAllBoard();

        if ( $boardInfos  && $boardInfos->size()>0 ){

            $boardArray = array();

            $rows = $boardInfos->fetchAll();

            foreach ($rows as $key=>$aRow){

                $boardKey = $aRow['boardID'];
                $boardValue = $aRow['boardName'];

                $boardArray[$boardKey] = $boardValue;

            }

            //  var_dump($boardArray);

            $this->formBean->setBoards($boardArray);

        }

    }

    /**
     *
     */
    private function addNewPollFunction(){

        if( $_SERVER[ 'REQUEST_METHOD' ] == 'POST' ) {

            $this->validate($this->formBean);

            if($this->formBean->isHasError()){

                return;

            }

            //var_dump($_SESSION);

            $pollModelVO = (new ModelUtil())->getPollModelVO($this->formBean);

            //var_dump($pollModelVO);

            $result = $this->pollModel->addNewPoll($pollModelVO);

            if(!$result){

                $this->formBean->setWarning("Insert Failure!");

            }else{
                $this->formBean->setWarning("Insert Success!");
            }

        }

    }

    /**
     * validate
     * @param CreateNewPollFormBean $formBean
     */
    private function  validate(CreateNewPollFormBean &$formBean){

        if(is_null($formBean)){
            return;
        }

        $selectedBoardId = $_POST['boardID'];

        $formBean->setSelectedBoard($selectedBoardId);

        $question = $_POST['question'];

        if(strlen($question)>500){

            $formBean->setHasError(true);
            $formBean->setTitleWarning("No more than 500 characters");

        }else{


            $formBean->setQuestion($question);

        }

        $option1 = $_POST['option1'];
        $option2 = $_POST['option2'];
        $option3 = $_POST['option3'];
        $option4 = $_POST['option4'];
        $option5 = $_POST['option5'];

        if(empty($option1) && empty($option2) &&  empty($option3) && empty($option4) && empty($option5)){
            $formBean->setHasError(true);
            $formBean->setOptionWarning("Please input at least one option");
        }else{

            $options = [$option1,$option2,$option3,$option4, $option5];

            $formBean->setOptions($options);

        }

        $isMutilChoice = $_POST['multi_choice'];

        if(!empty($isMutilChoice)){

            //var_dump($isMutilChoice);

            if (!filter_var($isMutilChoice, FILTER_VALIDATE_BOOLEAN)) {
                $formBean->setHasError(true);
                $formBean->setIsMutiWarning("Sorry, you have entered an incorrect multiple choice");
            }else{
                $formBean->setIsMultiple($isMutilChoice);
            }

        }


        $content = $_POST['content'];

        if(strlen($content)>2000){
            $formBean->setHasError(true);
            $formBean->setContentWarning("No more than 2000 characters");
        }else{
            $formBean->setContent($content);
        }



    }
}